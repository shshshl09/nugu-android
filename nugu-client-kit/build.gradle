plugins {
    id("java-library")
    alias(libs.plugins.protobuf)
    alias(libs.plugins.jetbrains.kotlin.jvm)
}

sourceSets {
    generated {
        java {
            srcDirs "${buildDir}/generated/source/proto/main/grpc"
        }
    }
}

dependencies {
    if (rootProject.ext["IS_RELEASE_MODE"] as Boolean) {
        api("com.skt.nugu.sdk:nugu-interface:$version")
        api("com.skt.nugu.sdk:nugu-agent:$version")
        implementation("com.skt.nugu.sdk:nugu-core:$version")
    } else {
        api(project(":nugu-interface"))
        api(project(":nugu-agent"))
        implementation(project(":nugu-core"))
    }

    implementation(libs.grpc.protobuf.lite)
    implementation(libs.grpc.stub)
    implementation(libs.grpc.okhttp)
    implementation(libs.okhttp)
    implementation(libs.gson)
    compileOnly("org.apache.tomcat:annotations-api:6.0.53") // necessary for Java 9+

    testImplementation(libs.junit)
    testImplementation(libs.mockito.core)
    testImplementation(libs.mockito.kotlin)
}

protobuf {
    def useAppleSilicon = false

    if(useAppleSilicon) {
        protoc { artifact = "com.google.protobuf:protoc:${libs.versions.protoc.get()}:osx-x86_64" }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${libs.versions.grpc.get().toString()}:osx-x86_64"
                // CURRENT_GRPC_VERSION
            }
        }
    } else {
        protoc { artifact = "com.google.protobuf:protoc:${libs.versions.protoc.get()}" }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${libs.versions.grpc.get().toString()}"
                // CURRENT_GRPC_VERSION
            }
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { // Options added to --grpc_out
                    option 'lite' }
            }
        }
    }
}

apply from: '../publish.gradle'